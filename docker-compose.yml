version: "3.9"

services:
  # MongoDB para Order Service
  mongo-order:
    image: mongo:6.0
    container_name: mongo-order
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: eventify-2025
      MONGO_INITDB_DATABASE: order-db
    volumes:
      - mongo-order-data:/data/db

  # MongoDB para Auth Service
  mongo-auth:
    image: mongo:6.0
    container_name: mongo-auth
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: eventify-2025
      MONGO_INITDB_DATABASE: authdb
    volumes:
      - mongo-auth-data:/data/db

  # MongoDB para Notification Service
  mongo-notification:
    image: mongo:6.0
    container_name: mongo-notification
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: eventify-2025
      MONGO_INITDB_DATABASE: notificationdb
    volumes:
      - mongo-notification-data:/data/db

  # Zookeeper necess√°rio para Kafka
  zookeeper:
    image: bitnami/zookeeper:3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  # Kafka Broker
  kafka:
    image: bitnami/kafka:3
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  # AKHQ para visualizar Kafka
  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    ports:
      - "8080:8080"
    volumes:
      - ./akhq.yml:/app/application.yml
    depends_on:
      - kafka

volumes:
  mongo-order-data:
  mongo-auth-data:
  mongo-notification-data:
